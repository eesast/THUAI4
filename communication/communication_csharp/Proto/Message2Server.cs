// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message2Server.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Communication.Proto {

  /// <summary>Holder for reflection information generated from Message2Server.proto</summary>
  public static partial class Message2ServerReflection {

    #region Descriptor
    /// <summary>File descriptor for Message2Server.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Message2ServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRNZXNzYWdlMlNlcnZlci5wcm90bxIIUHJvdG9idWYaEU1lc3NhZ2VUeXBl",
            "LnByb3RvGhRNZXNzYWdlMkNsaWVudC5wcm90byL5AQoPTWVzc2FnZVRvU2Vy",
            "dmVyEioKC21lc3NhZ2VUeXBlGAEgASgOMhUuUHJvdG9idWYuTWVzc2FnZVR5",
            "cGUSEAoIcGxheWVySUQYAiABKAMSDgoGdGVhbUlEGAMgASgDEiIKB2pvYlR5",
            "cGUYBCABKA4yES5Qcm90b2J1Zi5Kb2JUeXBlEiQKCHByb3BUeXBlGAUgASgO",
            "MhIuUHJvdG9idWYuUHJvcFR5cGUSGgoSdGltZUluTWlsbGlzZWNvbmRzGAYg",
            "ASgFEg0KBWFuZ2xlGAcgASgBEhIKClRvUGxheWVySUQYCCABKAMSDwoHbWVz",
            "c2FnZRgJIAEoCUIWqgITQ29tbXVuaWNhdGlvbi5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Communication.Proto.MessageTypeReflection.Descriptor, global::Communication.Proto.Message2ClientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.Proto.MessageToServer), global::Communication.Proto.MessageToServer.Parser, new[]{ "MessageType", "PlayerID", "TeamID", "JobType", "PropType", "TimeInMilliseconds", "Angle", "ToPlayerID", "Message" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MessageToServer : pb::IMessage<MessageToServer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageToServer> _parser = new pb::MessageParser<MessageToServer>(() => new MessageToServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageToServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Communication.Proto.Message2ServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToServer(MessageToServer other) : this() {
      messageType_ = other.messageType_;
      playerID_ = other.playerID_;
      teamID_ = other.teamID_;
      jobType_ = other.jobType_;
      propType_ = other.propType_;
      timeInMilliseconds_ = other.timeInMilliseconds_;
      angle_ = other.angle_;
      toPlayerID_ = other.toPlayerID_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToServer Clone() {
      return new MessageToServer(this);
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 1;
    private global::Communication.Proto.MessageType messageType_ = global::Communication.Proto.MessageType.AddPlayer;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 2;
    private long playerID_;
    /// <summary>
    ///消息发送者的playerID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerID {
      get { return playerID_; }
      set {
        playerID_ = value;
      }
    }

    /// <summary>Field number for the "teamID" field.</summary>
    public const int TeamIDFieldNumber = 3;
    private long teamID_;
    /// <summary>
    ///消息发送者所在队伍的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamID {
      get { return teamID_; }
      set {
        teamID_ = value;
      }
    }

    /// <summary>Field number for the "jobType" field.</summary>
    public const int JobTypeFieldNumber = 4;
    private global::Communication.Proto.JobType jobType_ = global::Communication.Proto.JobType.Job0;
    /// <summary>
    ///messageType为AddPlayer时选择的职业
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.JobType JobType {
      get { return jobType_; }
      set {
        jobType_ = value;
      }
    }

    /// <summary>Field number for the "propType" field.</summary>
    public const int PropTypeFieldNumber = 5;
    private global::Communication.Proto.PropType propType_ = global::Communication.Proto.PropType.Null;
    /// <summary>
    ///messageType为Pick时要捡起的道具类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.PropType PropType {
      get { return propType_; }
      set {
        propType_ = value;
      }
    }

    /// <summary>Field number for the "timeInMilliseconds" field.</summary>
    public const int TimeInMillisecondsFieldNumber = 6;
    private int timeInMilliseconds_;
    /// <summary>
    ///时间参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeInMilliseconds {
      get { return timeInMilliseconds_; }
      set {
        timeInMilliseconds_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 7;
    private double angle_;
    /// <summary>
    ///角度参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "ToPlayerID" field.</summary>
    public const int ToPlayerIDFieldNumber = 8;
    private long toPlayerID_;
    /// <summary>
    ///当messageType为Send时有效，为发送对象的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToPlayerID {
      get { return toPlayerID_; }
      set {
        toPlayerID_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 9;
    private string message_ = "";
    /// <summary>
    ///当messageType为Send时有效，为发送的消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageToServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageToServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageType != other.MessageType) return false;
      if (PlayerID != other.PlayerID) return false;
      if (TeamID != other.TeamID) return false;
      if (JobType != other.JobType) return false;
      if (PropType != other.PropType) return false;
      if (TimeInMilliseconds != other.TimeInMilliseconds) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Angle, other.Angle)) return false;
      if (ToPlayerID != other.ToPlayerID) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageType != global::Communication.Proto.MessageType.AddPlayer) hash ^= MessageType.GetHashCode();
      if (PlayerID != 0L) hash ^= PlayerID.GetHashCode();
      if (TeamID != 0L) hash ^= TeamID.GetHashCode();
      if (JobType != global::Communication.Proto.JobType.Job0) hash ^= JobType.GetHashCode();
      if (PropType != global::Communication.Proto.PropType.Null) hash ^= PropType.GetHashCode();
      if (TimeInMilliseconds != 0) hash ^= TimeInMilliseconds.GetHashCode();
      if (Angle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Angle);
      if (ToPlayerID != 0L) hash ^= ToPlayerID.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MessageType != global::Communication.Proto.MessageType.AddPlayer) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (PlayerID != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PlayerID);
      }
      if (TeamID != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TeamID);
      }
      if (JobType != global::Communication.Proto.JobType.Job0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) JobType);
      }
      if (PropType != global::Communication.Proto.PropType.Null) {
        output.WriteRawTag(40);
        output.WriteEnum((int) PropType);
      }
      if (TimeInMilliseconds != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TimeInMilliseconds);
      }
      if (Angle != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Angle);
      }
      if (ToPlayerID != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ToPlayerID);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MessageType != global::Communication.Proto.MessageType.AddPlayer) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (PlayerID != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PlayerID);
      }
      if (TeamID != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TeamID);
      }
      if (JobType != global::Communication.Proto.JobType.Job0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) JobType);
      }
      if (PropType != global::Communication.Proto.PropType.Null) {
        output.WriteRawTag(40);
        output.WriteEnum((int) PropType);
      }
      if (TimeInMilliseconds != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TimeInMilliseconds);
      }
      if (Angle != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Angle);
      }
      if (ToPlayerID != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ToPlayerID);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageType != global::Communication.Proto.MessageType.AddPlayer) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (PlayerID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerID);
      }
      if (TeamID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamID);
      }
      if (JobType != global::Communication.Proto.JobType.Job0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JobType);
      }
      if (PropType != global::Communication.Proto.PropType.Null) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PropType);
      }
      if (TimeInMilliseconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeInMilliseconds);
      }
      if (Angle != 0D) {
        size += 1 + 8;
      }
      if (ToPlayerID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToPlayerID);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageToServer other) {
      if (other == null) {
        return;
      }
      if (other.MessageType != global::Communication.Proto.MessageType.AddPlayer) {
        MessageType = other.MessageType;
      }
      if (other.PlayerID != 0L) {
        PlayerID = other.PlayerID;
      }
      if (other.TeamID != 0L) {
        TeamID = other.TeamID;
      }
      if (other.JobType != global::Communication.Proto.JobType.Job0) {
        JobType = other.JobType;
      }
      if (other.PropType != global::Communication.Proto.PropType.Null) {
        PropType = other.PropType;
      }
      if (other.TimeInMilliseconds != 0) {
        TimeInMilliseconds = other.TimeInMilliseconds;
      }
      if (other.Angle != 0D) {
        Angle = other.Angle;
      }
      if (other.ToPlayerID != 0L) {
        ToPlayerID = other.ToPlayerID;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageType = (global::Communication.Proto.MessageType) input.ReadEnum();
            break;
          }
          case 16: {
            PlayerID = input.ReadInt64();
            break;
          }
          case 24: {
            TeamID = input.ReadInt64();
            break;
          }
          case 32: {
            JobType = (global::Communication.Proto.JobType) input.ReadEnum();
            break;
          }
          case 40: {
            PropType = (global::Communication.Proto.PropType) input.ReadEnum();
            break;
          }
          case 48: {
            TimeInMilliseconds = input.ReadInt32();
            break;
          }
          case 57: {
            Angle = input.ReadDouble();
            break;
          }
          case 64: {
            ToPlayerID = input.ReadInt64();
            break;
          }
          case 74: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MessageType = (global::Communication.Proto.MessageType) input.ReadEnum();
            break;
          }
          case 16: {
            PlayerID = input.ReadInt64();
            break;
          }
          case 24: {
            TeamID = input.ReadInt64();
            break;
          }
          case 32: {
            JobType = (global::Communication.Proto.JobType) input.ReadEnum();
            break;
          }
          case 40: {
            PropType = (global::Communication.Proto.PropType) input.ReadEnum();
            break;
          }
          case 48: {
            TimeInMilliseconds = input.ReadInt32();
            break;
          }
          case 57: {
            Angle = input.ReadDouble();
            break;
          }
          case 64: {
            ToPlayerID = input.ReadInt64();
            break;
          }
          case 74: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
